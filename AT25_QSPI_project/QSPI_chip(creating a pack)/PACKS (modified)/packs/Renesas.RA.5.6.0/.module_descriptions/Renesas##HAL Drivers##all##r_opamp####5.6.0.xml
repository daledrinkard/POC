<?xml version="1.0" ?>
<raModuleDescription>
    <config id="config.driver.opamp" path="fsp_cfg/r_opamp_cfg.h" version="0">
        <property default="config.driver.opamp.param_checking_enable.bsp" display="Parameter Checking" id="config.driver.opamp.param_checking_enable" description="If selected code for parameter checking is included in the build.">
            <option display="Default (BSP)" id="config.driver.opamp.param_checking_enable.bsp" value="(BSP_CFG_PARAM_CHECKING_ENABLE)"/>
            <option display="Enabled" id="config.driver.opamp.param_checking_enable.enabled" value="(1)"/>
            <option display="Disabled" id="config.driver.opamp.param_checking_enable.disabled" value="(0)"/>
        </property>
        <content>
#ifdef __cplusplus
extern "C" {
#endif

#define OPAMP_CFG_PARAM_CHECKING_ENABLE ${config.driver.opamp.param_checking_enable}

#ifdef __cplusplus
}
#endif
        </content>
    </config>
    <module config="config.driver.opamp" display="Analog|${module.driver.opamp.name} Operational Amplifier (r_opamp)" id="module.driver.opamp_on_opamp" version="1" url="group___o_p_a_m_p.html">
        <constraint display="Unique name required for each instance">
            ("${interface.driver.opamp.${module.driver.opamp.name}}" === "1")
        </constraint>
        <constraint display="Requires OPAMP peripheral">
          "${interface.mcu.opamp}" === "1"
        </constraint>
        <requires id="interface.driver.opamp.requires.opamp" visible="false" interface="interface.mcu.opamp" display="Requires OPAMP peripheral" />
        <provides interface="interface.driver.opamp" />
        <provides interface="interface.driver.opamp_on_opamp" />
        <provides interface="interface.driver.opamp.${module.driver.opamp.name}" />
        <property default="g_opamp${_instance}" display="Name" id="module.driver.opamp.name" description="Module name.">
            <constraint display="Name must be a valid C symbol">testSymbol("${module.driver.opamp.name}")</constraint>
        </property>
        <property default="module.driver.opamp_on_opamp.agt_link.agt_link_agt1_opamp_0_1_2_3" display="AGT Start Trigger Configuration (N/A unless AGT Start Trigger is Selected for the Channel)" id="module.driver.opamp_on_opamp.agt_link" description="Configure which AGT channel event triggers which op-amp channel.  The AGT compare match event only starts the op-amp channel if the AGT Start trigger is selected in the Trigger configuration for the channel.">
            <option display="AGT1 Compare Match Starts OPAMPs 0 and 2 if configured for AGT Start, AGT0 Compare Match Starts OPAMPs 1 and 3 if configured for AGT Start" id="module.driver.opamp_on_opamp.agt_link.agt_link_agt1_opamp_0_2_agt0_opamp_1_3" value="OPAMP_AGT_LINK_AGT1_OPAMP_0_2_AGT0_OPAMP_1_3"/>
            <option display="AGT1 Compare Match Starts OPAMPs 0 and 1 if configured for AGT Start, AGT0 Compare Match Starts OPAMPs 2 and 3 if configured for AGT Start" id="module.driver.opamp_on_opamp.agt_link.agt_link_agt1_opamp_0_1_agt0_opamp_2_3" value="OPAMP_AGT_LINK_AGT1_OPAMP_0_1_AGT0_OPAMP_2_3"/>
            <option display="AGT1 Compare Match Starts all OPAMPs configured for AGT Start" id="module.driver.opamp_on_opamp.agt_link.agt_link_agt1_opamp_0_1_2_3" value="OPAMP_AGT_LINK_AGT1_OPAMP_0_1_2_3"/>
        </property>
        <property default="" display="Power Mode" id="module.driver.opamp_on_opamp.mode" description="Configure the op-amp based on power or speed requirements.  This setting affects the minimum required stabilization time.  Middle speed is not available for all MCUs.">
            <select enum="enum.driver.opamp_on_opamp.mode" />
        </property>
        <property default="" display="Trigger Channel 0" id="module.driver.opamp_on_opamp.trigger_channel_0" description="Select the event triggers to start or stop op-amp channel 0.  If the event trigger is selected for start, the start() API enables the event trigger for this channel. If the event trigger is selected for stop, the stop() API disables the event trigger for this channel.">
            <select enum="enum.driver.opamp_on_opamp.trigger_channel_0" />
        </property>
        <property default="" display="Trigger Channel 1" id="module.driver.opamp_on_opamp.trigger_channel_1" description="Select the event triggers to start or stop op-amp channel 1.  If the event trigger is selected for start, the start() API enables the event trigger for this channel. If the event trigger is selected for stop, the stop() API disables the event trigger for this channel.">
            <select enum="enum.driver.opamp_on_opamp.trigger_channel_1" />
        </property>
        <property default="module.driver.opamp_on_opamp.trigger_channel_2.trigger_software_start_software_stop" display="Trigger Channel 2" id="module.driver.opamp_on_opamp.trigger_channel_2" description="Select the event triggers to start or stop op-amp channel 2.  If the event trigger is selected for start, the start() API enables the event trigger for this channel. If the event trigger is selected for stop, the stop() API disables the event trigger for this channel.">
            <option display="Software Start Software Stop" id="module.driver.opamp_on_opamp.trigger_channel_2.trigger_software_start_software_stop" value="OPAMP_TRIGGER_SOFTWARE_START_SOFTWARE_STOP"/>
            <option display="AGT Start Software Stop" id="module.driver.opamp_on_opamp.trigger_channel_2.trigger_agt_start_software_stop" value="OPAMP_TRIGGER_AGT_START_SOFTWARE_STOP"/>
            <option display="AGT Start ADC Stop" id="module.driver.opamp_on_opamp.trigger_channel_2.trigger_agt_start_adc_stop" value="OPAMP_TRIGGER_AGT_START_ADC_STOP"/>
        </property>
        <property default="" display="Trigger Channel 3" id="module.driver.opamp_on_opamp.trigger_channel_3" description="Select the event triggers to start or stop op-amp channel 3.  If the event trigger is selected for start, the start() API enables the event trigger for this channel. If the event trigger is selected for stop, the stop() API disables the event trigger for this channel.">
            <select enum="enum.driver.opamp_on_opamp.trigger_channel_3" />
        </property>
        <property default="" display="OPAMP AMP0OS" id="module.driver.opamp_on_opamp.ampos0" description="Select output to connect to AMP0O pin">
            <select enum="enum.driver.opamp_on_opamp.ampos0"/>
        </property>
        <property default="" display="OPAMP AMP0PS" id="module.driver.opamp_on_opamp.ampps0" description="Select input to connect to AMP0+ pin">
            <select enum="enum.driver.opamp_on_opamp.ampps0"/>
        </property>
        <property default="" display="OPAMP AMP0MS" id="module.driver.opamp_on_opamp.ampms0" description="Select input to connect to AMP0- pin">
            <select enum="enum.driver.opamp_on_opamp.ampms0"/>
        </property>
        <property default="" display="OPAMP AMP1PS" id="module.driver.opamp_on_opamp.ampps1" description="Select input to connect to AMP1+ pin">
            <select enum="enum.driver.opamp_on_opamp.ampps1"/>
        </property>
        <property default="" display="OPAMP AMP1MS" id="module.driver.opamp_on_opamp.ampms1" description="Select input to connect to AMP1- pin">
            <select enum="enum.driver.opamp_on_opamp.ampms1"/>
        </property>
        <property default="" display="OPAMP AMP2PS" id="module.driver.opamp_on_opamp.ampps2" description="Select input to connect to AMP2+ pin">
            <select enum="enum.driver.opamp_on_opamp.ampps2"/>
        </property>
        <property default="" display="OPAMP AMP2MS" id="module.driver.opamp_on_opamp.ampms2" description="Select input to connect to AMP2- pin">
            <select enum="enum.driver.opamp_on_opamp.ampms2"/>
        </property>

        <!-- all channels are handled using one instance. -->
        <peripheral name="OPAMP0" component="opamp0" />
        <peripheral name="OPAMP1" component="opamp1" />
        <peripheral name="OPAMP2" component="opamp2" />
        <header>

            /** OPAMP Instance. */
            extern const opamp_instance_t ${module.driver.opamp.name};
			/** Access the OPAMP instance using these structures when calling API functions directly (::p_api is not used). */
extern opamp_instance_ctrl_t ${module.driver.opamp.name}_ctrl;
extern const opamp_cfg_t ${module.driver.opamp.name}_cfg;
        </header>
        <includes>
#include &quot;r_opamp.h&quot;
#include &quot;r_opamp_api.h&quot;
        </includes>
        <declarations>
opamp_instance_ctrl_t ${module.driver.opamp.name}_ctrl;
const opamp_extended_cfg_t ${module.driver.opamp.name}_cfg_extend =
{
    .agt_link            = ${module.driver.opamp_on_opamp.agt_link},
    .mode                = ${module.driver.opamp_on_opamp.mode},
    .trigger_channel_0   = (opamp_trigger_t) ${module.driver.opamp_on_opamp.trigger_channel_0},
    .trigger_channel_1   = (opamp_trigger_t) ${module.driver.opamp_on_opamp.trigger_channel_1},
    .trigger_channel_2   = (opamp_trigger_t) ${module.driver.opamp_on_opamp.trigger_channel_2},
    .trigger_channel_3   = (opamp_trigger_t) ${module.driver.opamp_on_opamp.trigger_channel_3},
    .plus_input_select_opamp0  = ${module.driver.opamp_on_opamp.ampps0},
    .minus_input_select_opamp0 = ${module.driver.opamp_on_opamp.ampms0},
    .output_select_opamp0      = ${module.driver.opamp_on_opamp.ampos0},
    .plus_input_select_opamp1  = ${module.driver.opamp_on_opamp.ampps1},
    .minus_input_select_opamp1 = ${module.driver.opamp_on_opamp.ampms1},
    .plus_input_select_opamp2  = ${module.driver.opamp_on_opamp.ampps2},
    .minus_input_select_opamp2 = ${module.driver.opamp_on_opamp.ampms2},
};
const opamp_cfg_t ${module.driver.opamp.name}_cfg =
{
    .p_extend            = &amp;${module.driver.opamp.name}_cfg_extend
};
/* Instance structure to use this module. */
const opamp_instance_t ${module.driver.opamp.name} =
{
    .p_ctrl        = &amp;${module.driver.opamp.name}_ctrl,
    .p_cfg         = &amp;${module.driver.opamp.name}_cfg,
    .p_api         = &amp;g_opamp_on_opamp
};
        </declarations>
        <api configurable="true">
            <file>ra/fsp/inc/instances/r_opamp.h</file>
            <file>ra/fsp/inc/api/r_opamp_api.h</file>
        </api>
    </module>
</raModuleDescription>
