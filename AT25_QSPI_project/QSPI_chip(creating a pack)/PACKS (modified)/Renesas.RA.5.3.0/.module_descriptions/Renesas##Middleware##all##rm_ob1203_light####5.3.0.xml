<?xml version="1.0" ?>
<raModuleDescription>
    <module display="Sensor|OB1203 Light mode (rm_ob1203)" id="module.driver.ob1203_light_mode_on_ob1203" version="1" visible="false" url="group___r_m___o_b1203.html">
        <constraint display="In LS mode, the interrupt source is not allowed.">
            ("${module.driver.ob1203_mode.light_mode}" != "module.driver.ob1203_mode.light_mode.ls") ||
            (("${module.driver.ob1203_mode.light_interrupt_source}" != "module.driver.ob1203_mode.light_interrupt_source.red") &amp;&amp;
            ("${module.driver.ob1203_mode.light_interrupt_source}" != "module.driver.ob1203_mode.light_interrupt_source.blue"))
        </constraint>
        <requires id="module.driver.ob1203.requires.comms_i2c_device" interface="interface.driver.comms_i2c_device" visible="true" display="Requires I2C Communications Device">
            <override property="module.driver.comms_i2c_device.slave_address" value="0x53"/>
            <override property="module.driver.comms_i2c_device.address_mode" value="I2C_MASTER_ADDR_MODE_7BIT"/>
            <override property="module.driver.comms_i2c_device.p_context" value="${module.driver.ob1203_mode.p_context}"/>
            <override property="module.driver.comms_i2c_device.p_callback" value="rm_ob1203_comms_i2c_callback"/>
        </requires>

        <provides interface="interface.driver.ob1203_mode" />
        <provides interface="interface.driver.ob1203_mode_on_ob1203" />
        <property default="NULL" id="module.driver.ob1203_mode.p_context" />
        <property default="ob1203" id="module.driver.ob1203_mode.instance_name" />
        <property default="module.driver.ob1203_mode.light_mode.ls" display="Operation Mode" id="module.driver.ob1203_mode.light_mode" description="Set operation mode.">
            <option display="LS mode" id="module.driver.ob1203_mode.light_mode.ls" value="RM_OB1203_LIGHT_SENSOR_MODE_LS"/>
            <option display="CS mode" id="module.driver.ob1203_mode.light_mode.cs" value="RM_OB1203_LIGHT_SENSOR_MODE_CS"/>
        </property>
        <property default="module.driver.ob1203_mode.light_interrupt_type.threshold" display="Interrupt Type" id="module.driver.ob1203_mode.light_interrupt_type" description="Set interrupt type.">
            <option display="Threshold" id="module.driver.ob1203_mode.light_interrupt_type.threshold" value="RM_OB1203_LIGHT_INTERRUPT_TYPE_THRESHOLD"/>
            <option display="Variation" id="module.driver.ob1203_mode.light_interrupt_type.variation" value="RM_OB1203_LIGHT_INTERRUPT_TYPE_VARIATION"/>
        </property>
        <property default="module.driver.ob1203_mode.light_interrupt_source.clear" display="Interrupt Source" id="module.driver.ob1203_mode.light_interrupt_source" description="Set interrupt source.">
            <option display="Clear channel" id="module.driver.ob1203_mode.light_interrupt_source.clear" value="RM_OB1203_LIGHT_INTERRUPT_SOURCE_CLEAR_CHANNEL"/>
            <option display="Green channel" id="module.driver.ob1203_mode.light_interrupt_source.green" value="RM_OB1203_LIGHT_INTERRUPT_SOURCE_GREEN_CHANNEL"/>
            <option display="Red channel (CS mode only)" id="module.driver.ob1203_mode.light_interrupt_source.red" value="RM_OB1203_LIGHT_INTERRUPT_SOURCE_RED_CHANNEL"/>
            <option display="Blue channel (CS mode only)" id="module.driver.ob1203_mode.light_interrupt_source.blue" value="RM_OB1203_LIGHT_INTERRUPT_SOURCE_BLUE_CHANNEL"/>
        </property>
        <property default="0x02" display="The Number of Similar Consecutive Interrupt Events" id="module.driver.ob1203_mode.light_interrupt_persist" description="The number of similar consecutive Light mode interrupt events that must occur before the interrupt is asserted (4bits). Min = 0x0 and Max = 0xF">
            <constraint display="Value must be a non-negative integer">testInteger("${module.driver.ob1203_mode.light_interrupt_persist}")  &amp;&amp; ("${module.driver.ob1203_mode.light_interrupt_persist}" &gt;= 0)</constraint>
            <constraint display="Value must be 4bits or less">("${module.driver.ob1203_mode.light_interrupt_persist}" &lt;= 0xF)</constraint>
        </property>
        <property default="module.driver.ob1203_mode.light_sleep_after_interrupt.disabled" display="Sleep after Interrupt" id="module.driver.ob1203_mode.light_sleep_after_interrupt" description="Set sleep after interrupt.">
            <option display="Enabled" id="module.driver.ob1203_mode.light_sleep_after_interrupt.enabled" value="RM_OB1203_SLEEP_AFTER_INTERRUPT_ENABLE"/>
            <option display="Disabled" id="module.driver.ob1203_mode.light_sleep_after_interrupt.disabled" value="RM_OB1203_SLEEP_AFTER_INTERRUPT_DISABLE"/>
        </property>
        <property default="module.driver.ob1203_mode.light_gain.mode_3" display="Gain" id="module.driver.ob1203_mode.light_gain" description="Set gain for detection range.">
            <option display="1" id="module.driver.ob1203_mode.light_gain.mode_1" value="RM_OB1203_LIGHT_GAIN_1"/>
            <option display="3" id="module.driver.ob1203_mode.light_gain.mode_3" value="RM_OB1203_LIGHT_GAIN_3"/>
            <option display="6" id="module.driver.ob1203_mode.light_gain.mode_6" value="RM_OB1203_LIGHT_GAIN_6"/>
        </property>
        <property default="module.driver.ob1203_mode.light_resolution_period.18bit_100ms" display="Resolution and Measurement Period" id="module.driver.ob1203_mode.light_resolution_period" description="Set resolution and measurement period.">
            <option display="Resolution:13bit. Measurement Period:25ms" id="module.driver.ob1203_mode.light_resolution_period.13bit_25ms" value="RM_OB1203_LIGHT_RESOLUTION_13BIT_PERIOD_25MS"/>
            <option display="Resolution:13bit. Measurement Period:50ms" id="module.driver.ob1203_mode.light_resolution_period.13bit_50ms" value="RM_OB1203_LIGHT_RESOLUTION_13BIT_PERIOD_50MS"/>
            <option display="Resolution:13bit. Measurement Period:100ms" id="module.driver.ob1203_mode.light_resolution_period.13bit_100ms" value="RM_OB1203_LIGHT_RESOLUTION_13BIT_PERIOD_100MS"/>
            <option display="Resolution:13bit. Measurement Period:200ms" id="module.driver.ob1203_mode.light_resolution_period.13bit_200ms" value="RM_OB1203_LIGHT_RESOLUTION_13BIT_PERIOD_200MS"/>
            <option display="Resolution:13bit. Measurement Period:500ms" id="module.driver.ob1203_mode.light_resolution_period.13bit_500ms" value="RM_OB1203_LIGHT_RESOLUTION_13BIT_PERIOD_500MS"/>
            <option display="Resolution:13bit. Measurement Period:1000ms" id="module.driver.ob1203_mode.light_resolution_period.13bit_1000ms" value="RM_OB1203_LIGHT_RESOLUTION_13BIT_PERIOD_1000MS"/>
            <option display="Resolution:13bit. Measurement Period:2000ms" id="module.driver.ob1203_mode.light_resolution_period.13bit_2000ms" value="RM_OB1203_LIGHT_RESOLUTION_13BIT_PERIOD_2000MS"/>
            <option display="Resolution:16bit. Measurement Period:25ms" id="module.driver.ob1203_mode.light_resolution_period.16bit_25ms" value="RM_OB1203_LIGHT_RESOLUTION_16BIT_PERIOD_25MS"/>
            <option display="Resolution:16bit. Measurement Period:50ms" id="module.driver.ob1203_mode.light_resolution_period.16bit_50ms" value="RM_OB1203_LIGHT_RESOLUTION_16BIT_PERIOD_50MS"/>
            <option display="Resolution:16bit. Measurement Period:100ms" id="module.driver.ob1203_mode.light_resolution_period.16bit_100ms" value="RM_OB1203_LIGHT_RESOLUTION_16BIT_PERIOD_100MS"/>
            <option display="Resolution:16bit. Measurement Period:200ms" id="module.driver.ob1203_mode.light_resolution_period.16bit_200ms" value="RM_OB1203_LIGHT_RESOLUTION_16BIT_PERIOD_200MS"/>
            <option display="Resolution:16bit. Measurement Period:500ms" id="module.driver.ob1203_mode.light_resolution_period.16bit_500ms" value="RM_OB1203_LIGHT_RESOLUTION_16BIT_PERIOD_500MS"/>
            <option display="Resolution:16bit. Measurement Period:1000ms" id="module.driver.ob1203_mode.light_resolution_period.16bit_1000ms" value="RM_OB1203_LIGHT_RESOLUTION_16BIT_PERIOD_1000MS"/>
            <option display="Resolution:16bit. Measurement Period:2000ms" id="module.driver.ob1203_mode.light_resolution_period.16bit_2000ms" value="RM_OB1203_LIGHT_RESOLUTION_16BIT_PERIOD_2000MS"/>
            <option display="Resolution:17bit. Measurement Period:50ms" id="module.driver.ob1203_mode.light_resolution_period.17bit_50ms" value="RM_OB1203_LIGHT_RESOLUTION_17BIT_PERIOD_50MS"/>
            <option display="Resolution:17bit. Measurement Period:100ms" id="module.driver.ob1203_mode.light_resolution_period.17bit_100ms" value="RM_OB1203_LIGHT_RESOLUTION_17BIT_PERIOD_100MS"/>
            <option display="Resolution:17bit. Measurement Period:200ms" id="module.driver.ob1203_mode.light_resolution_period.17bit_200ms" value="RM_OB1203_LIGHT_RESOLUTION_17BIT_PERIOD_200MS"/>
            <option display="Resolution:17bit. Measurement Period:500ms" id="module.driver.ob1203_mode.light_resolution_period.17bit_500ms" value="RM_OB1203_LIGHT_RESOLUTION_17BIT_PERIOD_500MS"/>
            <option display="Resolution:17bit. Measurement Period:1000ms" id="module.driver.ob1203_mode.light_resolution_period.17bit_1000ms" value="RM_OB1203_LIGHT_RESOLUTION_17BIT_PERIOD_1000MS"/>
            <option display="Resolution:17bit. Measurement Period:2000ms" id="module.driver.ob1203_mode.light_resolution_period.17bit_2000ms" value="RM_OB1203_LIGHT_RESOLUTION_17BIT_PERIOD_2000MS"/>
            <option display="Resolution:18bit. Measurement Period:100ms" id="module.driver.ob1203_mode.light_resolution_period.18bit_100ms" value="RM_OB1203_LIGHT_RESOLUTION_18BIT_PERIOD_100MS"/>
            <option display="Resolution:18bit. Measurement Period:200ms" id="module.driver.ob1203_mode.light_resolution_period.18bit_200ms" value="RM_OB1203_LIGHT_RESOLUTION_18BIT_PERIOD_200MS"/>
            <option display="Resolution:18bit. Measurement Period:500ms" id="module.driver.ob1203_mode.light_resolution_period.18bit_500ms" value="RM_OB1203_LIGHT_RESOLUTION_18BIT_PERIOD_500MS"/>
            <option display="Resolution:18bit. Measurement Period:1000ms" id="module.driver.ob1203_mode.light_resolution_period.18bit_1000ms" value="RM_OB1203_LIGHT_RESOLUTION_18BIT_PERIOD_1000MS"/>
            <option display="Resolution:18bit. Measurement Period:2000ms" id="module.driver.ob1203_mode.light_resolution_period.18bit_2000ms" value="RM_OB1203_LIGHT_RESOLUTION_18BIT_PERIOD_2000MS"/>
            <option display="Resolution:19bit. Measurement Period:200ms" id="module.driver.ob1203_mode.light_resolution_period.19bit_200ms" value="RM_OB1203_LIGHT_RESOLUTION_19BIT_PERIOD_200MS"/>
            <option display="Resolution:19bit. Measurement Period:500ms" id="module.driver.ob1203_mode.light_resolution_period.19bit_500ms" value="RM_OB1203_LIGHT_RESOLUTION_19BIT_PERIOD_500MS"/>
            <option display="Resolution:19bit. Measurement Period:1000ms" id="module.driver.ob1203_mode.light_resolution_period.19bit_1000ms" value="RM_OB1203_LIGHT_RESOLUTION_19BIT_PERIOD_1000MS"/>
            <option display="Resolution:19bit. Measurement Period:2000ms" id="module.driver.ob1203_mode.light_resolution_period.19bit_2000ms" value="RM_OB1203_LIGHT_RESOLUTION_19BIT_PERIOD_2000MS"/>
            <option display="Resolution:20bit. Measurement Period:500ms" id="module.driver.ob1203_mode.light_resolution_period.20bit_500ms" value="RM_OB1203_LIGHT_RESOLUTION_20BIT_PERIOD_500MS"/>
            <option display="Resolution:20bit. Measurement Period:1000ms" id="module.driver.ob1203_mode.light_resolution_period.20bit_1000ms" value="RM_OB1203_LIGHT_RESOLUTION_20BIT_PERIOD_1000MS"/>
            <option display="Resolution:20bit. Measurement Period:2000ms" id="module.driver.ob1203_mode.light_resolution_period.20bit_2000ms" value="RM_OB1203_LIGHT_RESOLUTION_20BIT_PERIOD_2000MS"/>
        </property>
        <property default="0x00CCC" display="Upper Threshold" id="module.driver.ob1203_mode.light_upper_threshold" description="Set upper threshold value (20bits). Min = 0x00000 and Max = 0xFFFFF.">
            <constraint display="Value must be a non-negative integer">testInteger("${module.driver.ob1203_mode.light_upper_threshold}")  &amp;&amp; ("${module.driver.ob1203_mode.light_upper_threshold}" &gt;= 0)</constraint>
            <constraint display="Value must be 20bits or less">("${module.driver.ob1203_mode.light_upper_threshold}" &lt;= 0xFFFFF)</constraint>
        </property>
        <property default="0x00000" display="Lower Threshold" id="module.driver.ob1203_mode.light_lower_threshold" description="Set lower threshold value (20bits). Min = 0x00000 and Max = 0xFFFFF.">
            <constraint display="Value must be a non-negative integer">testInteger("${module.driver.ob1203_mode.light_lower_threshold}")  &amp;&amp; ("${module.driver.ob1203_mode.light_lower_threshold}" &gt;= 0)</constraint>
            <constraint display="Value must be 20bits or less">("${module.driver.ob1203_mode.light_lower_threshold}" &lt;= 0xFFFFF)</constraint>
        </property>
        <property default="module.driver.ob1203_mode.light_variance_threshold.128_counts" display="Variance Threshold" id="module.driver.ob1203_mode.light_variance_threshold" description="Set variance threshold. New data varies by selected counts compared to previous result.">
            <option display="+/- 8 counts" id="module.driver.ob1203_mode.light_variance_threshold.8_counts" value="RM_OB1203_VARIANCE_THRESHOLD_8_COUNTS"/>
            <option display="+/- 16 counts" id="module.driver.ob1203_mode.light_variance_threshold.16_counts" value="RM_OB1203_VARIANCE_THRESHOLD_16_COUNTS"/>
            <option display="+/- 32 counts" id="module.driver.ob1203_mode.light_variance_threshold.32_counts" value="RM_OB1203_VARIANCE_THRESHOLD_32_COUNTS"/>
            <option display="+/- 64 counts" id="module.driver.ob1203_mode.light_variance_threshold.64_counts" value="RM_OB1203_VARIANCE_THRESHOLD_64_COUNTS"/>
            <option display="+/- 128 counts" id="module.driver.ob1203_mode.light_variance_threshold.128_counts" value="RM_OB1203_VARIANCE_THRESHOLD_128_COUNTS"/>
            <option display="+/- 256 counts" id="module.driver.ob1203_mode.light_variance_threshold.256_counts" value="RM_OB1203_VARIANCE_THRESHOLD_256_COUNTS"/>
            <option display="+/- 512 counts" id="module.driver.ob1203_mode.light_variance_threshold.512_counts" value="RM_OB1203_VARIANCE_THRESHOLD_512_COUNTS"/>
            <option display="+/- 1024 counts" id="module.driver.ob1203_mode.light_variance_threshold.1024_counts" value="RM_OB1203_VARIANCE_THRESHOLD_1024_COUNTS"/>
        </property>

        <header>
/* OB1203 Light mode */
extern rm_ob1203_mode_extended_cfg_t ${module.driver.ob1203_mode.instance_name}_extended_cfg;
        </header>

        <declarations>
extern rm_ob1203_api_t const  g_ob1203_on_ob1203_light;
rm_ob1203_mode_extended_cfg_t ${module.driver.ob1203_mode.instance_name}_extended_cfg =
{
    .p_api = (void *)&amp;g_ob1203_on_ob1203_light,
    .light_sensor_mode = ${module.driver.ob1203_mode.light_mode},
    .light_interrupt_type = ${module.driver.ob1203_mode.light_interrupt_type},
    .light_interrupt_source = ${module.driver.ob1203_mode.light_interrupt_source},
    .light_interrupt_persist = ${module.driver.ob1203_mode.light_interrupt_persist},
    .light_sleep = ${module.driver.ob1203_mode.light_sleep_after_interrupt},
    .light_gain = ${module.driver.ob1203_mode.light_gain},
    .light_upper_threshold = ${module.driver.ob1203_mode.light_upper_threshold},
    .light_lower_threshold = ${module.driver.ob1203_mode.light_lower_threshold},
    .light_variance_threshold = ${module.driver.ob1203_mode.light_variance_threshold},
    .light_resolution_period = ${module.driver.ob1203_mode.light_resolution_period},
};
        </declarations>

    </module>
</raModuleDescription>
